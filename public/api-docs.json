{"swagger": "2.0", "info": {"title": "Your Project API", "description": "API documentation for your project", "termsOfService": "https://www.example.com/policies/terms/", "contact": {"email": "contact@example.com"}, "license": {"name": "BSD License"}, "version": "v1"}, "host": "localhost:8000", "schemes": ["http"], "basePath": "/", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Basic": {"type": "basic"}}, "security": [{"Basic": []}], "paths": {"/Auth/Fcm": {"post": {"operationId": "Auth_Fcm_create", "description": "Register a Firebase Cloud Messaging (FCM) token for push notifications. This endpoint associates an FCM token with the authenticated user.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["token"], "type": "object", "properties": {"token": {"description": "FCM token", "type": "string"}}}}, {"name": "Authorization", "in": "header", "description": "JWT token", "type": "string"}], "responses": {"200": {"description": "Successfully registered FCM token"}, "400": {"description": "Invalid data provided"}}, "tags": ["Auth"]}, "parameters": []}, "/Auth/Login": {"post": {"operationId": "Auth_Login_create", "description": "Authenticate a user with email/name and password. This endpoint returns user information and JWT tokens for authentication.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["password"], "type": "object", "properties": {"name/email": {"type": "string"}, "password": {"type": "string"}}}}], "responses": {"200": {"description": "Login successful", "schema": {"type": "object", "properties": {"user": {"type": "object"}, "refresh": {"type": "string"}, "access": {"type": "string"}}}}, "400": {"description": "Email or password required"}, "401": {"description": "Password incorrect"}, "404": {"description": "User does not exist"}}, "tags": ["Auth"]}, "parameters": []}, "/Auth/Refresh": {"post": {"operationId": "Auth_Refresh_create", "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenRefresh"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenRefresh"}}}, "tags": ["Auth"]}, "parameters": []}, "/Auth/Signup": {"post": {"operationId": "Auth_Signup_create", "description": "Register a new user in the system. This endpoint creates a new user account with the specified type (student or company), name, email, and password.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["type", "name", "email", "password"], "type": "object", "properties": {"type": {"description": "User type (student/company)", "type": "string"}, "name": {"type": "string"}, "email": {"type": "string"}, "password": {"type": "string"}, "number": {"type": "integer"}}}}], "responses": {"200": {"description": "Signup successful", "schema": {"type": "object", "properties": {"user": {"type": "object"}, "refresh": {"type": "string"}, "access": {"type": "string"}}}}, "400": {"description": "Invalid data provided"}, "405": {"description": "Type not provided"}}, "tags": ["Auth"]}, "parameters": []}, "/Auth/google": {"post": {"operationId": "Auth_google_create", "description": "Authenticate a user using Google OAuth. This endpoint accepts a Google ID token and returns user information along with JWT tokens for authentication.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["id_token"], "type": "object", "properties": {"id_token": {"description": "Google ID token", "type": "string"}}}}], "responses": {"200": {"description": "Login successful", "schema": {"type": "object", "properties": {"message": {"type": "string"}, "access_token": {"type": "string"}, "refresh_token": {"type": "string"}, "user": {"type": "object", "properties": {"email": {"type": "string"}, "name": {"type": "string"}, "picture": {"type": "string"}, "type": {"type": "string"}}}}}}, "400": {"description": "Invalid token"}}, "tags": ["Auth"]}, "parameters": []}, "/Auth/linkdein": {"post": {"operationId": "Auth_linkdein_create", "description": "Authenticate a user using LinkedIn OAuth. This endpoint accepts a LinkedIn access token and returns user information along with JWT tokens for authentication.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["access_token"], "type": "object", "properties": {"access_token": {"description": "LinkedIn access token", "type": "string"}}}}], "responses": {"200": {"description": "Login successful", "schema": {"type": "object", "properties": {"message": {"type": "string"}, "access_token": {"type": "string"}, "refresh_token": {"type": "string"}, "user": {"type": "object", "properties": {"email": {"type": "string"}, "name": {"type": "string"}}}}}}, "400": {"description": "Invalid token or missing access token"}}, "tags": ["Auth"]}, "parameters": []}, "/Auth/notfi": {"put": {"operationId": "Auth_notfi_update", "description": "Mark a notification as seen. This endpoint updates the status of a notification to indicate that the user has viewed it.", "parameters": [{"name": "id", "in": "path", "description": "Notification ID", "type": "integer", "required": true}, {"name": "Authorization", "in": "header", "description": "JWT token", "type": "string"}], "responses": {"200": {"description": "Notification updated successfully"}}, "tags": ["Auth"]}, "parameters": []}, "/Auth/otpemail": {"post": {"operationId": "Auth_otpemail_create", "description": "Request a password reset. This endpoint sends an OTP to the user's email for password reset verification.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"email/name": {"type": "string"}}}}], "responses": {"200": {"description": "OTP sent successfully", "schema": {"type": "object", "properties": {"otp": {"type": "string"}, "iat": {"type": "string"}}}}, "404": {"description": "User does not exist"}}, "tags": ["Auth"]}, "parameters": []}, "/Auth/post": {"get": {"operationId": "Auth_post_list", "description": "Get all saved opportunity posts for the authenticated student. This endpoint returns a list of opportunities that the student has bookmarked.", "parameters": [{"name": "Authorization", "in": "header", "description": "JWT token", "type": "string"}], "responses": {"200": {"description": "Saved posts retrieved successfully"}}, "tags": ["Auth"]}, "parameters": []}, "/Auth/post/{id}/": {"post": {"operationId": "Auth_post_create", "description": "Save an opportunity post to the user's saved posts. This endpoint allows students to bookmark opportunities they're interested in.", "parameters": [{"name": "id", "in": "path", "description": "Post ID", "type": "integer", "required": true}, {"name": "Authorization", "in": "header", "description": "JWT token", "type": "string"}], "responses": {"200": {"description": "Operation successful"}, "404": {"description": "Post does not exist"}}, "tags": ["Auth"]}, "delete": {"operationId": "Auth_post_delete", "description": "Remove an opportunity post from the user's saved posts. This endpoint allows students to unbookmark opportunities.", "parameters": [{"name": "id", "in": "path", "description": "Post ID", "type": "integer", "required": true}, {"name": "Authorization", "in": "header", "description": "JWT token", "type": "string"}], "responses": {"200": {"description": "Operation successful"}, "404": {"description": "Post does not exist"}}, "tags": ["Auth"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/Auth/user": {"get": {"operationId": "Auth_user_list", "description": "Get the current user's profile information. This endpoint returns the authenticated user's profile details.", "parameters": [{"name": "Authorization", "in": "header", "description": "JWT token", "type": "string"}], "responses": {"200": {"description": "Operation successful"}, "401": {"description": "Unauthorized"}, "400": {"description": "Bad request"}}, "tags": ["Auth"]}, "put": {"operationId": "Auth_user_update", "description": "Update a user's profile information. This endpoint allows users to modify their profile details.", "parameters": [{"name": "Authorization", "in": "header", "description": "JWT token", "type": "string"}], "responses": {"200": {"description": "Operation successful"}, "401": {"description": "Unauthorized"}, "400": {"description": "Bad request"}}, "tags": ["Auth"]}, "delete": {"operationId": "Auth_user_delete", "description": "Delete a user account. This endpoint requires the user's password for confirmation.", "parameters": [{"name": "Authorization", "in": "header", "description": "JWT token", "type": "string"}], "responses": {"200": {"description": "Operation successful"}, "401": {"description": "Unauthorized"}, "400": {"description": "Bad request"}}, "tags": ["Auth"]}, "parameters": []}, "/Auth/user/{id}/": {"get": {"operationId": "Auth_user_read", "description": "Get a user's profile information by ID. This endpoint returns the profile details of a specific user.", "parameters": [{"name": "id", "in": "path", "description": "User ID", "type": "integer", "required": true}, {"name": "Authorization", "in": "header", "description": "JWT token", "type": "string"}], "responses": {"200": {"description": "User details retrieved successfully"}, "404": {"description": "User does not exist"}}, "tags": ["Auth"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/Auth/userpassword": {"put": {"operationId": "Auth_userpassword_update", "description": "Reset a user's password. This endpoint allows users to set a new password after receiving an OTP.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["password"], "type": "object", "properties": {"name/email": {"type": "string"}, "password": {"type": "string"}}}}], "responses": {"200": {"description": "Password changed successfully"}, "400": {"description": "Invalid data provided"}, "404": {"description": "User does not exist"}, "406": {"description": "Password and OTP required"}}, "tags": ["Auth"]}, "parameters": []}, "/app/application": {"get": {"operationId": "app_application_list", "description": "Get all applications for the authenticated student. This endpoint returns a list of opportunities the student has applied for and their application details.", "parameters": [{"name": "Authorization", "in": "header", "description": "JWT token", "type": "string"}], "responses": {"200": {"description": "Applications retrieved successfully", "schema": {"type": "object", "properties": {"post": {"type": "array", "items": {"type": "object"}}, "application": {"type": "array", "items": {"type": "object"}}}}}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "404": {"description": "Not found"}}, "tags": ["app"]}, "parameters": []}, "/app/application/{id}/": {"post": {"operationId": "app_application_create", "description": "Submit an application for an opportunity. This endpoint allows students to apply for opportunities either individually or as part of a team.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"message": {"description": "Application message", "type": "string"}}}}, {"name": "id", "in": "path", "description": "Opportunity ID", "type": "integer", "required": true}, {"name": "Authorization", "in": "header", "description": "JWT token", "type": "string"}, {"name": "team", "in": "header", "description": "Team name", "required": false, "type": "string"}], "responses": {"200": {"description": "Application created successfully"}, "400": {"description": "Invalid data provided or already applied"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "404": {"description": "Opportunity or team not found"}, "226": {"description": "Opportunity is closed"}}, "tags": ["app"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/app/applications/{id}/": {"delete": {"operationId": "app_applications_delete", "description": "Delete an application. This endpoint allows students to withdraw their applications for opportunities.", "parameters": [{"name": "id", "in": "path", "description": "Application ID", "type": "integer", "required": true}, {"name": "Authorization", "in": "header", "description": "JWT token", "type": "string"}], "responses": {"200": {"description": "Application deleted successfully"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "404": {"description": "Application not found"}}, "tags": ["app"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/app/choose/{id}/": {"post": {"operationId": "app_choose_create", "description": "Select applications to accept for an opportunity. This endpoint allows companies to choose which applications to accept and close the opportunity.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["id"], "type": "object", "properties": {"id": {"description": "List of application IDs to accept", "type": "array", "items": {"type": "integer"}}}}}, {"name": "id", "in": "path", "description": "Opportunity ID", "type": "integer", "required": true}, {"name": "Authorization", "in": "header", "description": "JWT token", "type": "string"}], "responses": {"200": {"description": "Applications accepted successfully", "schema": {"type": "array", "items": {"type": "object"}}}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "404": {"description": "Opportunity not found"}}, "tags": ["app"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/app/search/": {"get": {"operationId": "app_search_list", "description": "Search for opportunities and companies. This endpoint allows users to search for opportunities and companies based on a query string.", "parameters": [{"name": "q", "in": "query", "description": "Search query", "type": "string"}, {"name": "Authorization", "in": "header", "description": "JWT token", "type": "string"}], "responses": {"200": {"description": "Search results retrieved successfully", "schema": {"type": "object", "properties": {"opportunity": {"type": "array", "items": {"type": "object"}}, "company": {"type": "array", "items": {"type": "object"}}}}}, "400": {"description": "Query is required"}, "401": {"description": "Unauthorized"}, "404": {"description": "Not found"}}, "tags": ["app"]}, "parameters": []}, "/app/{id}/": {"get": {"operationId": "app_read", "description": "Get all approved applications for a specific opportunity. This endpoint allows companies to view applications that have been approved by teams.", "parameters": [{"name": "id", "in": "path", "description": "Opportunity ID", "type": "integer", "required": true}, {"name": "Authorization", "in": "header", "description": "JWT token", "type": "string"}], "responses": {"200": {"description": "Applications retrieved successfully", "schema": {"type": "array", "items": {"type": "object"}}}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "404": {"description": "Not found"}}, "tags": ["app"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/app/{id}/accept": {"post": {"operationId": "app_accept_create", "description": "Accept a team application. This endpoint allows team members to approve an application submitted on behalf of their team.", "parameters": [{"name": "id", "in": "path", "description": "Application ID", "type": "integer", "required": true}, {"name": "Authorization", "in": "header", "description": "JWT token", "type": "string"}], "responses": {"200": {"description": "Application accepted successfully"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "404": {"description": "Application not found"}}, "tags": ["app"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/app/{id}/reject": {"post": {"operationId": "app_reject_create", "description": "Reject a team application. This endpoint allows team members to reject an application submitted on behalf of their team.", "parameters": [{"name": "id", "in": "path", "description": "Application ID", "type": "integer", "required": true}, {"name": "Authorization", "in": "header", "description": "JWT token", "type": "string"}], "responses": {"200": {"description": "Application rejected successfully"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "404": {"description": "Application not found"}}, "tags": ["app"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/post/opportunity/": {"get": {"operationId": "post_opportunity_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["post"]}, "post": {"operationId": "post_opportunity_create", "description": "Create a new opportunity. This endpoint allows companies to post new opportunities for students to apply.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"id": {"type": "integer"}, "title": {"type": "string"}, "description": {"type": "string"}, "Type": {"type": "string"}, "category": {"type": "string"}, "skill_input": {"type": "string"}, "worktype": {"type": "string"}}}}, {"name": "Authorization", "in": "header", "description": "JWT token", "type": "string"}], "responses": {"200": {"description": "Operation successful"}, "201": {"description": "Created successfully"}, "204": {"description": "Deleted successfully"}, "400": {"description": "Invalid data provided"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "404": {"description": "Not found"}}, "tags": ["post"]}, "put": {"operationId": "post_opportunity_update", "description": "Update an existing opportunity. This endpoint allows companies to modify details of their posted opportunities.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"id": {"type": "integer"}, "title": {"type": "string"}, "description": {"type": "string"}, "Type": {"type": "string"}, "category": {"type": "string"}, "skill_input": {"type": "string"}, "worktype": {"type": "string"}}}}, {"name": "Authorization", "in": "header", "description": "JWT token", "type": "string"}], "responses": {"200": {"description": "Operation successful"}, "201": {"description": "Created successfully"}, "204": {"description": "Deleted successfully"}, "400": {"description": "Invalid data provided"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "404": {"description": "Not found"}}, "tags": ["post"]}, "delete": {"operationId": "post_opportunity_delete", "description": "Delete an opportunity. This endpoint allows companies to remove their posted opportunities.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"id": {"type": "integer"}, "title": {"type": "string"}, "description": {"type": "string"}, "Type": {"type": "string"}, "category": {"type": "string"}, "skill_input": {"type": "string"}, "worktype": {"type": "string"}}}}, {"name": "Authorization", "in": "header", "description": "JWT token", "type": "string"}], "responses": {"200": {"description": "Operation successful"}, "201": {"description": "Created successfully"}, "204": {"description": "Deleted successfully"}, "400": {"description": "Invalid data provided"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "404": {"description": "Not found"}}, "tags": ["post"]}, "parameters": []}, "/post/team/": {"get": {"operationId": "post_team_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["post"]}, "post": {"operationId": "post_team_create", "description": "Create a new team. This endpoint allows students to create teams for collaborative applications.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"id": {"type": "integer"}, "name": {"type": "string"}, "emails": {"type": "array", "items": {"type": "string"}}}}}, {"name": "Authorization", "in": "header", "description": "JWT token", "type": "string"}], "responses": {"200": {"description": "Operation successful"}, "201": {"description": "Created successfully"}, "204": {"description": "Deleted successfully"}, "400": {"description": "Invalid data provided"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "404": {"description": "Not found"}}, "tags": ["post"]}, "put": {"operationId": "post_team_update", "description": "Update an existing team. This endpoint allows students to modify details of their teams.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"id": {"type": "integer"}, "name": {"type": "string"}, "emails": {"type": "array", "items": {"type": "string"}}}}}, {"name": "Authorization", "in": "header", "description": "JWT token", "type": "string"}], "responses": {"200": {"description": "Operation successful"}, "201": {"description": "Created successfully"}, "204": {"description": "Deleted successfully"}, "400": {"description": "Invalid data provided"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "404": {"description": "Not found"}}, "tags": ["post"]}, "delete": {"operationId": "post_team_delete", "description": "Delete a team. This endpoint allows students to remove their teams.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"id": {"type": "integer"}, "name": {"type": "string"}, "emails": {"type": "array", "items": {"type": "string"}}}}}, {"name": "Authorization", "in": "header", "description": "JWT token", "type": "string"}], "responses": {"200": {"description": "Operation successful"}, "201": {"description": "Created successfully"}, "204": {"description": "Deleted successfully"}, "400": {"description": "Invalid data provided"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "404": {"description": "Not found"}}, "tags": ["post"]}, "parameters": []}, "/post/team/managing/": {"post": {"operationId": "post_team_managing_create", "description": "Add a student to a team using their email. This endpoint allows team members to add other students to their teams by email address.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"teamid": {"type": "integer"}, "userid": {"type": "integer"}, "useremail": {"type": "string"}}}}, {"name": "Authorization", "in": "header", "description": "JWT token", "type": "string"}], "responses": {"200": {"description": "Operation successful"}, "400": {"description": "Invalid data provided"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "404": {"description": "Not found"}}, "tags": ["post"]}, "put": {"operationId": "post_team_managing_update", "description": "Add a student to a team. This endpoint allows team members to add other students to their teams.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"teamid": {"type": "integer"}, "userid": {"type": "integer"}, "useremail": {"type": "string"}}}}, {"name": "Authorization", "in": "header", "description": "JWT token", "type": "string"}], "responses": {"200": {"description": "Operation successful"}, "400": {"description": "Invalid data provided"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "404": {"description": "Not found"}}, "tags": ["post"]}, "delete": {"operationId": "post_team_managing_delete", "description": "Remove a student from a team. This endpoint allows team members to remove other students from their teams.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"teamid": {"type": "integer"}, "userid": {"type": "integer"}, "useremail": {"type": "string"}}}}, {"name": "Authorization", "in": "header", "description": "JWT token", "type": "string"}], "responses": {"200": {"description": "Operation successful"}, "400": {"description": "Invalid data provided"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "404": {"description": "Not found"}}, "tags": ["post"]}, "parameters": []}}, "definitions": {"TokenRefresh": {"required": ["refresh"], "type": "object", "properties": {"refresh": {"title": "Refresh", "type": "string", "minLength": 1}, "access": {"title": "Access", "type": "string", "readOnly": true, "minLength": 1}}}}}